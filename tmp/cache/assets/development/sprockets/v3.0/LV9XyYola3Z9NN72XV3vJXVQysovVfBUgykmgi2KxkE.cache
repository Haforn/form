I"«(function() {
  $(function() {
    var confirmedYes, editComment, removePopUp, setTrigger;
    $('.new_comment, .edit_comment').on('keydown', function(evt) {
      if (evt.which === 13) {
        evt.preventDefault();
        return $(this).submit();
      }
    });
    $('.new_comment').on('ajax:success', function(evt, post, status) {
      var $comment, $dataSetUp, $error_message, $form, $str;
      if ($(this).find('.error-field').length > 0) {
        $(this).find('.error-field').removeClass('error-field');
        $('.error-message').remove();
      }
      $str = post.body.trim();
      console.log($str.length);
      if ($str.length > 1) {
        $comment = $('<div/>').addClass('comment').html(post.body);
        $dataSetUp = ' data_post_id="' + post.post_id + '" data_comment_id="' + post.id + '" ';
        $comment.append('<a class="js-edit" data-remote="true" href="/posts/' + post.post_id + '/comments/' + post.id + '/edit">Edit</a> <a href="/" class="js-trigger" ' + $dataSetUp + ' data-remote="true">Verwijderen?</a>');
        $comment.find('.js-trigger').bind('click', function() {
          setTrigger(this);
        });
        $comment.find('.js-edit').bind('click', function() {
          editComment(this);
        });
        $comment.hide();
        $comment.append($('<hr/>'));
        $('.comments').append($comment);
        $comment.slideDown();
        return $('.new_comment .input-comment').val('').focus();
      } else {
        $form = $(this).find('.input-comment');
        $form.parent().addClass('error-field');
        $error_message = $('<span/>').addClass('error-message').html('Comment can\'t be blank');
        $form.after($error_message);
        return $error_message.delay(100).queue(function() {
          return $error_message.addClass('show-message');
        });
      }
    });

    /* Destroy pop up */
    $('.js-trigger').on('click', function() {
      return setTrigger(this);
    });
    setTrigger = function(el) {
      var $comment_id, $confirm, $href, $post_id;
      $post_id = $(el).attr('data_post_id');
      $comment_id = $(el).attr('data_comment_id');
      $confirm = $('<div/>').addClass('js-confirm');
      $confirm.html('<p>Weet je het zeker?</p>');
      $confirm.append('<a class="js-yes" data_comment_id="" data-remote="true" rel="nofollow" data-method="delete" href=""> Ja </a> <a href="/" data-remote="true" class="js-no"> nee </a>');
      $confirm.find('.js-yes').attr('data_comment_id', $comment_id);
      $href = 'posts/' + $post_id + '/comments/' + $comment_id;
      $confirm.find('.js-yes').attr('href', $href);
      $('.overlay').addClass('active');
      $confirm.hide();
      $('body').append($confirm);
      $confirm.slideDown();
      $confirm.find('.js-no').bind('click', function() {
        removePopUp();
      });
      return $confirm.find('.js-yes').bind('click', function() {
        confirmedYes(this);
      });
    };
    $('.overlay').on('click', function() {
      return removePopUp();
    });
    removePopUp = function() {
      $('.overlay').removeClass('active');
      $('.js-confirm').slideUp(300);
      return $('.js-confirm').delay(300).queue(function() {
        return $(this).remove();
      });
    };
    confirmedYes = function(el) {
      var $comment, $dataVal;
      removePopUp();
      $dataVal = $(el).attr('data_comment_id');
      $comment = $('a[data_comment_id="' + $dataVal + '"]').parent();
      $comment.slideUp();
      return $comment.delay(300).queue(function() {
        return $(this).remove();
      });
    };

    /* Edit comment */
    $('.js-edit').on('click', function(evt) {
      return editComment(this);
    });
    return editComment = function(el) {
      return $(el).on('ajax:success', function(evt, post, status) {
        console.log(post, evt, status);
        $('.new_comment').addClass('edit_comment').removeClass('new_comment');
        return $('.edit_comment').find('input-comment').val(post.body);
      });
    };
  });

}).call(this);
:ET